---
import { getRepository, getReleases } from "../utils/github";
import { getSecret } from "astro:env/server";

// Server-side code goes here
const timestamp = new Date().toISOString();

// Get repos from env
const reposStr = getSecret("GITHUB_REPOS") ?? "mrfylke/kontraktsportal-api";
const repos = reposStr.split(",").map((repo) => repo.trim());

// Fetch data for all repositories
const reposData = await Promise.all(
  repos.map(async (repoFullName) => {
    const [owner, repo] = repoFullName.split("/");
    const [repository, releases] = await Promise.all([
      getRepository(owner, repo),
      getReleases(owner, repo),
    ]);

    // Calculate hours since last release
    let hoursSinceLastRelease = null;
    if (releases.length > 0) {
      const lastReleaseDate = new Date(releases[0].published_at);
      const now = new Date();
      const diffMs = now.getTime() - lastReleaseDate.getTime();
      hoursSinceLastRelease = Math.floor(diffMs / (1000 * 60 * 60));
    }

    // Check if there is a draft release
    const hasDraftRelease = releases.some((release) => release.draft);

    return {
      repository,
      hoursSinceLastRelease,
      hasDraftRelease,
    };
  })
);

// Get threshold from env
const thresholdStr = getSecret("RELEASE_HOURS_THRESHOLD");
const releaseHoursThreshold = thresholdStr ? parseInt(thresholdStr, 10) : 72;

// Enable static generation with ISR revalidation
export const prerender = true;
export const config = {
  isr: {
    revalidate: 300, // 5 minutes in seconds
  },
};
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>GitHub Release Stats</title>
  </head>
  <body>
    <main>
      <h1>GitHub Release Stats</h1>

      {
        reposData.map(
          ({ repository, hoursSinceLastRelease, hasDraftRelease }) => {
            const shouldRelease =
              hasDraftRelease &&
              hoursSinceLastRelease !== null &&
              hoursSinceLastRelease >= releaseHoursThreshold;

            return (
              <div class="repo-card">
                <h2>{repository.full_name}</h2>
                <p>{repository.description}</p>

                {shouldRelease && (
                  <div class="release-warning">
                    üö®{" "}
                    <strong>
                      It has been {hoursSinceLastRelease} hours since the last
                      release!
                    </strong>
                    <br />
                    <span>It's time to do a release!</span>
                  </div>
                )}

                <div class="release-info">
                  <div>
                    ‚è∞ Hours since last release:{" "}
                    {hoursSinceLastRelease !== null
                      ? hoursSinceLastRelease
                      : "N/A"}
                  </div>
                  <div>
                    üìù Draft release present: {hasDraftRelease ? "Yes" : "No"}
                  </div>
                </div>
              </div>
            );
          }
        )
      }

      <p class="timestamp">Last updated: {timestamp}</p>
    </main>
  </body>
</html>

<style>
  body {
    font-family:
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      sans-serif;
    line-height: 1.6;
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
  }

  .repo-card {
    margin-bottom: 3rem;
    padding: 1.5rem;
    border: 1px solid #e1e4e8;
    border-radius: 8px;
    background: #fff;
  }

  .repo-card h2 {
    margin-top: 0;
    color: #0366d6;
  }

  .release-warning {
    background: #ffebee;
    color: #b71c1c;
    border: 2px solid #b71c1c;
    border-radius: 8px;
    padding: 1.5rem;
    margin: 1.5rem 0;
    font-size: 1.3rem;
    text-align: center;
    font-weight: bold;
    box-shadow: 0 2px 8px rgba(183, 28, 28, 0.1);
  }

  .release-info {
    margin: 1.5rem 0;
    padding: 1rem;
    background: #e8f0fe;
    border-radius: 8px;
    display: flex;
    gap: 2rem;
    font-size: 1.1rem;
  }

  .timestamp {
    margin-top: 2rem;
    color: #666;
    font-size: 0.9rem;
  }
</style>
